service: ui-src

frameworkVersion: "4"

plugins:
  - serverless-plugin-scripts
  - serverless-s3-sync
  - serverless-stack-termination-protection
  - serverless-cloudfront-invalidate

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stackTags:
    PROJECT: ${self:custom.project}
    SERVICE: ${self:service}

custom:
  project: "carts"
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  serverlessTerminationProtection:
    stages:
      - main
      - val
      - production
  api_region: ${param:ApiRegion}
  api_url: ${param:ApiGatewayRestApiUrl}
  cognito_region: ${param:CognitoRegion}
  cognito_identity_pool_id: ${param:IdentityPoolId}
  cognito_user_pool_id: ${param:UserPoolId}
  cognito_user_pool_client_id: ${param:UserPoolClientId}
  cognito_user_pool_client_domain: ${param:UserPoolClientDomain}
  ldSdkClient: ${env:REACT_APP_LD_SDK_CLIENT, ssm:/${self:custom.stage}/launchdarkly/client, ssm:/default/launchdarkly/client}
  s3_attachments_bucket_region: ${param:AttachmentsBucketRegion}
  s3_attachments_bucket_name: ${param:AttachmentsBucketName}
  ui_s3_bucket_name: ${param:S3BucketName}
  ui_cloudfront_distribution_id: ${param:CloudFrontDistributionId}
  application_endpoint_url: ${param:ApplicationEndpointUrl}
  application_signout_url: "${self:custom.application_endpoint_url}postLogout"
  signout_redirect_url: ${env:POST_SIGNOUT_REDIRECT, ssm:/configuration/${self:custom.stage}/cognito/redirectSignout, ssm:/configuration/default/cognito/redirectSignout}
  s3Sync:
    - bucketName: ${self:custom.ui_s3_bucket_name}
      localDir: ./build
      deleteRemoved: true
  cloudfrontInvalidate:
    - distributionId: ${self:custom.ui_cloudfront_distribution_id}
      items:
        - "/*"
  scripts:
    hooks:
      # Build the static archive and populate the config
      package:initialize: |
        cd services/ui-src/
        set -e
        # TODO: [MDCT-300] handle react hooks warnings then remove CI=false
        CI=false SKIP_PREFLIGHT_CHECK=true yarn run build
        export API_REGION=${self:custom.api_region}
        export API_URL=${self:custom.api_url}
        export COGNITO_REGION=${self:custom.cognito_region}
        export COGNITO_IDENTITY_POOL_ID=${self:custom.cognito_identity_pool_id}
        export COGNITO_USER_POOL_ID=${self:custom.cognito_user_pool_id}
        export COGNITO_USER_POOL_CLIENT_ID=${self:custom.cognito_user_pool_client_id}
        export COGNITO_USER_POOL_CLIENT_DOMAIN=${self:custom.cognito_user_pool_client_domain}
        export COGNITO_REDIRECT_SIGNIN=${self:custom.application_endpoint_url}
        export COGNITO_REDIRECT_SIGNOUT=${self:custom.application_signout_url}
        export POST_SIGNOUT_REDIRECT=${self:custom.signout_redirect_url}
        export REACT_APP_LD_SDK_CLIENT=${self:custom.ldSdkClient}
        export S3_ATTACHMENTS_BUCKET_REGION=${self:custom.s3_attachments_bucket_region}
        export S3_ATTACHMENTS_BUCKET_NAME=${self:custom.s3_attachments_bucket_name}
        export LOCAL_LOGIN=false
        export BRANCH_NAME=${self:custom.stage}
        ./env.sh
        cp public/env-config.js build/env-config.js
resources:
  Resources:
    Honk: # this is just because it won't deploy unless we have some resource being created
      Type: AWS::SSM::Parameter
      Properties:
        Type: String
        Value: "honk"
