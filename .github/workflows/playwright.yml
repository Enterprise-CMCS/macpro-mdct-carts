name: Playwright Tests

on:
  workflow_call:
    inputs:
      base-url:
        description: 'Base URL for testing'
        required: true
        type: string

    outputs:
      test-result:
        description: 'Result of the test execution'
        value: ${{ jobs.playwright-tests.result }}

permissions:
  id-token: write

jobs:
  playwright-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version-file: ".nvmrc"
    - name: Install test dependencies
      run: yarn install
      working-directory: tests/playwright
    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(yarn list @playwright/test --depth=0 --json | jq -r '.data.trees[].name' | sed 's/@playwright\/test@//')" >> $GITHUB_OUTPUT
      working-directory: tests/playwright
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}
        restore-keys: |
          ${{ runner.os }}-playwright-
    - name: Install Playwright Browsers
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: yarn playwright install --with-deps
      working-directory: tests/playwright
    - name: Run Playwright tests
      run: yarn playwright test --reporter=github
      working-directory: tests/playwright
      env:
        BASE_URL: ${{ inputs.base-url }}
        CYPRESS_STATE_USER_EMAIL: ${{ secrets.CYPRESS_STATE_USER_EMAIL }}
        CYPRESS_STATE_USER_PASSWORD: ${{ secrets.CYPRESS_STATE_USER_PASSWORD }}
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-html-report-${{ github.run_number }}
        path: tests/playwright/playwright-report
        retention-days: 30

  notify-slack-on-failure:
    name: Notify Slack on Test Failure
    needs: playwright-tests
    if: ${{ always() && needs.playwright-tests.result == 'failure' }}
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          MSG_MINIMAL: true
          SLACK_COLOR: danger
          SLACK_TITLE: "ðŸš¨ E2E Tests Failed on ${{ github.ref_name }} against ${{ inputs.base-url }}"
          SLACK_MESSAGE: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          SLACK_FOOTER: ${{ github.repository }}
